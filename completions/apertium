# -*- mode: shell-script; sh-basic-offset: 4; indent-tabs-mode: nil -*-
#
# apertium completion
# by Kevin Brubeck Unhammer <unhammer@fsfe.org>
# Licence: GNU GPL v2

_apertium() 
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    case "$prev" in
        -d)
        _filedir -d
        ;;
        -m)
        _filedir tmx
        ;;
        -f)
        COMPREPLY=( $( compgen -W 'txt html html-noent rtf odt docx wxml \
        xlsx pptx xpresstag wikimedia' -- $cur ) )
        ;;
        -o)
        COMPREPLY=( $( compgen -W "$(eval apertium -l)" -- $cur ) )
        ;;
        *)
        case "$cur" in
            -*)
            COMPREPLY=( $( compgen -W '-d -f -a -u -m -o -l' -- $cur ) )
            ;;
            *)
            local dirs
            if [[ "${COMP_WORDS[COMP_CWORD-2]}" == "-d" ]]; then
                # TODO: should check through all of COMP_WORDS, in case of intervening arguments; also remove possible trailing backslash from -d argument
                dirs=`ls ${COMP_WORDS[COMP_CWORD-1]}/modes/*.mode | sed 's%.*/%%' | sed 's%\.mode$%%'`
                COMPREPLY=( $( compgen -W "$dirs" -- $cur ) )
            else
                local dirs=$(eval apertium -l)
                local dirpat=$( echo $dirs | sed 's/ /|/g' )
                local langset=0
                    # look through previous words and see if we've
                    # set the language already
                for (( i=0; i < ${#COMP_WORDS[@]}-1; i++ ))
                do
                    if [[ "${COMP_WORDS[i]}" == @($dirpat) ]]; then
                            # ignore -o-prefixed language code
                        if [[ "${COMP_WORDS[i-1]}" != "-o" ]]; then
                            langset=1
                        fi
                    fi
                done
                if [ $langset -eq 1 ]; then
                    _filedir
                else
                    COMPREPLY=( $( compgen -W "$dirs" -- $cur ) )
                fi
            fi
            ;;
            # direction should only happen once!
        esac
    esac
  
    return 0
}
complete -F _apertium $filenames apertium
complete -F _apertium $filenames apertium-j

_apertium_transfer() 
{
    local cur prev

    COMPREPLY=()
    cur=`_get_cword`
    first=${COMP_WORDS[1]}    # TODO go through all dash-options

    case "$first" in
        -b)
        if [ $COMP_CWORD -eq 2 ]; then
            _filedir t1x
        elif [ $COMP_CWORD -eq 3 ]; then
            _filedir t1x.bin
        else
            _filedir
        fi
        ;;
        *)
        if [ $COMP_CWORD -eq 1 ]; then
            _filedir t1x
        elif [ $COMP_CWORD -eq 2 ]; then
            _filedir t1x.bin
        elif [ $COMP_CWORD -eq 3 ]; then
            _filedir autobil.bin
        else
            _filedir
        fi
        ;;
    esac
  
    return 0
}
complete -F _apertium_transfer $filenames apertium-transfer
complete -F _apertium_transfer $filenames apertium-transfer-j

_apertium_interchunk() 
{
    local cur

    COMPREPLY=()
    cur=`_get_cword`

    case "$cur" in
        *)
        if [ $COMP_CWORD -eq 1 ]; then
            _filedir t2x
        elif [ $COMP_CWORD -eq 2 ]; then
            _filedir t2x.bin
        else
            _filedir
        fi
        ;;
    esac
  
    return 0
}
complete -F _apertium_transfer $filenames apertium-interchunk
complete -F _apertium_transfer $filenames apertium-interchunk-j

_apertium_postchunk() 
{
    local cur

    COMPREPLY=()
    cur=`_get_cword`

    case "$cur" in
        *)
        if [ $COMP_CWORD -eq 1 ]; then
            _filedir t3x
        elif [ $COMP_CWORD -eq 2 ]; then
            _filedir t3x.bin
        else
            _filedir
        fi
        ;;
    esac
  
    return 0
}
complete -F _apertium_transfer $filenames apertium-postchunk
complete -F _apertium_transfer $filenames apertium-postchunk-j

